:root{
  /* changer les couleurs i√ßi */
  --orange: #ff5c00;
  --background-color: #000000b0;
}

body {
  font-family: 'Roboto','Poppins' ,Verdana, Geneva, Tahoma, sans-serif;
  min-height: 100vh;
  background-image: url('/bg.jpg');
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  color: white;
  font-size: 1.1em;
  text-align: center;
}

.center{
  padding: 24px;
  position: absolute;
  inset: 0;
  margin: auto;
  max-height: 400px;
  aspect-ratio: 5/4.5;
  background-color: var(--background-color);
  border-radius: 20px;
  display: flex;
  flex-direction: column;
  gap: 24px;
  align-items: center;
  border: 6px solid var(--orange);
  justify-content: center;
}

form{
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
}

.info{
  display: flex;
  flex-direction: column;
}

.remember{
  display: flex;
  gap: 4px;
  align-items: center;
}

.connexion{
  display: flex;
  justify-content: center;
  gap: 24px;
}

a{
  text-decoration:none;
  color: white;
}

a:hover{
  color: var(--orange);
}

#falseCode{
  color: red;
  font-size: 0.7em;
}

/* button style */
.btn {
  cursor: pointer;
  display: inline-block;
  width: 8em;
  height: 3em;
  line-height: 2.5em;
  overflow: hidden;
  margin: 20px;
  font-size: 18px;
  z-index: 1;
  color: var(--orange);
  border: 2px solid var(--orange);
  border-radius: 6px;
  position: relative;
}

.btn::before {
  position: absolute;
  content: "";
  background: var(--orange);
  width: 150px;
  height: 200px;
  z-index: -1;
  border-radius: 50%;
}

.btn:hover {
  color: white;
  background-color: var(--orange);
}

.btn:before {
  top: 100%;
  left: 100%;
  transition: .3s all;
}

.btn:hover::before {
  top: -30px;
  left: -30px;
}

/*form styles*/

.form-control {
  position: relative;
  margin: 20px 0px;
  width: 190px;
}

.form-control input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px #fff solid;
  display: block;
  width: 100%;
  padding: 15px 0;
  font-size: 18px;
  color: #fff;
}

.form-control input:focus,
.form-control input:valid {
  outline: 0;
  border-bottom-color: var(--orange);
}

.form-control label {
  position: absolute;
  top: 15px;
  left: 0;
  pointer-events: none;
}

.form-control label span {
  display: inline-block;
  font-size: 18px;
  min-width: 5px;
  color: #fff;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.form-control input:focus+label span,
.form-control input:valid+label span {
  color: var(--orange);
  transform: translateY(-30px);
}

/*checkbox*/

.container input {
  display: none;
}

.container {
  display: block;
  position: relative;
  cursor: pointer;
  font-size: 16px;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

/* Create a custom checkbox */
.checkmark {
  position: relative;
  top: 0;
  left: 0;
  height: 1.3em;
  width: 1.3em;
  background-color: #2196F300;
  border-radius: 0.25em;
  transition: all 0.25s;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: var(--orange);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  transform: rotate(0deg);
  border: 0.1em solid white;
  left: 0;
  top: 0;
  width: 1.05em;
  height: 1.05em;
  border-radius: 0.25em;
  transition: all 0.25s, border-width 0.1s;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  left: 0.45em;
  top: 0.25em;
  width: 0.25em;
  height: 0.5em;
  border-color: #fff0 white white #fff0;
  border-width: 0 0.15em 0.15em 0;
  border-radius: 0em;
  transform: rotate(45deg);
}